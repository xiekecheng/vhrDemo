<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiekc.vhr.mapper.EmpMapper">
    <select id="getAllNations" resultType="com.xiekc.vhr.bean.Nation">
        select * from nation;
    </select>
    <select id="getAllPolitics" resultType="com.xiekc.vhr.bean.PoliticsStatus">
        select * from politicsstatus;
    </select>
    <insert id="addEmp" parameterType="com.xiekc.vhr.bean.Employee" useGeneratedKeys="true" keyProperty="id">
            insert into employee (name, gender,
      birthday, idCard, wedlock, nationId,
      nativePlace, politicId, email,
      phone, address, departmentId,
      jobLevelId, posId, engageForm,
      tiptopDegree, specialty, school,
      beginDate,workID,
      contractTerm, conversionTime,
      beginContract, endContract, workAge
      )
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
      #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER},
      #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
      #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
      #{tiptopDegree,jdbcType=VARCHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
      #{beginDate,jdbcType=DATE},#{workID,jdbcType=BIGINT},
      #{contractTerm,jdbcType=BIGINT}, #{conversionTime,jdbcType=DATE},
      #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
      )
    </insert>
    <select id="getMaxWorkID" resultType="Long">
        SELECT workID from employee where id=(select max(id) from employee)
    </select>
    <resultMap id="BaseResultMap" type="com.xiekc.vhr.bean.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="idCard" property="idCard"/>
        <result column="wedlock" property="wedlock"/>
        <result column="nationId" property="nationId"/>
        <result column="nativePlace" property="nativePlace"/>
        <result column="politicId" property="politicId"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="departmentId" property="departmentId"/>
        <result column="jobLevelId" property="jobLevelId"/>
        <result column="posId" property="posId"/>
        <result column="engageForm" property="engageForm"/>
        <result column="tiptopDegree" property="tiptopDegree"/>
        <result column="specialty" property="specialty"/>
        <result column="school" property="school"/>
        <result column="beginDate" property="beginDate"/>
        <result column="workState" property="workState"/>
        <result column="workID" property="workID"/>
        <result column="contractTerm" property="contractTerm"/>
        <result column="conversionTime" property="conversionTime"/>
        <result column="notWorkDate" property="notWorkDate"/>
        <result column="beginContract" property="beginContract"/>
        <result column="endContract" property="endContract"/>
        <result column="workAge" property="workAge"/>
        <association property="department" javaType="com.xiekc.vhr.bean.Department">
            <id property="id" column="did"/>
            <result property="name" column="dname"/>
        </association>
        <association property="jobLevel" javaType="com.xiekc.vhr.bean.JobLevel">
            <id property="id" column="jlid"/>
            <result property="name" column="jlname"/>
            <result property="titleLevel" column="jlTitleLevel"/>
        </association>
        <association property="nation" javaType="com.xiekc.vhr.bean.Nation">
            <id property="id" column="nid"/>
            <result property="name" column="nname"/>
        </association>
        <association property="position" javaType="com.xiekc.vhr.bean.Position">
            <id property="id" column="pid"/>
            <result property="name" column="pname"/>
        </association>
        <association property="politicsStatus" javaType="com.xiekc.vhr.bean.PoliticsStatus">
            <id property="id" column="psid"/>
            <result property="name" column="psname"/>
        </association>
        <association property="salary" javaType="com.xiekc.vhr.bean.Salary">
            <id column="sid" jdbcType="INTEGER" property="id" />
            <result column="bonus" jdbcType="INTEGER" property="bonus" />
            <result column="lunchSalary" jdbcType="INTEGER" property="lunchSalary" />
            <result column="trafficSalary" jdbcType="INTEGER" property="trafficSalary" />
            <result column="basicSalary" jdbcType="INTEGER" property="basicSalary" />
            <result column="allSalary" jdbcType="INTEGER" property="allSalary" />
            <result column="pensionBase" jdbcType="INTEGER" property="pensionBase" />
            <result column="pensionPer" jdbcType="REAL" property="pensionPer" />
            <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
            <result column="medicalBase" jdbcType="INTEGER" property="medicalBase" />
            <result column="medicalPer" jdbcType="REAL" property="medicalPer" />
            <result column="accumulationFundBase" jdbcType="INTEGER" property="accumulationFundBase" />
            <result column="accumulationFundPer" jdbcType="REAL" property="accumulationFundPer" />
            <result column="sname" jdbcType="VARCHAR" property="name" />
        </association>
    </resultMap>
    <select id="getEmployeeByPage" resultMap="BaseResultMap">
        select e.*,jl.`id` as jlid,jl.`name` as jlname,jl.`titleLevel` as jlTitleLevel,d.`id` as did,d.`name` as
        dname,n.`id` as nid,n.`name` as nname,p.`id` as pid,p.`name` as pname,ps.`id` as psid,ps.`name` as psname from
        employee e,joblevel jl,department d,nation n,position p,politicsstatus ps where e.`posId`=p.`id` and
        e.`jobLevelId`=jl.`id` and e.`departmentId`=d.id and e.`nationId`=n.`id` and e.`politicId`=ps.`id` and e.`name`
        like concat('%',#{keywords},'%')
        <if test="engageForm!=null and engageForm!=''">
            AND e.engageForm=#{engageForm}
        </if>
        <if test="politicId!=null and politicId!=''">
            AND e.politicId=#{politicId}
        </if>
        <if test="nationId!=null and nationId!=''">
            AND e.nationId=#{nationId}
        </if>
        <if test="posId!=null and posId!=''">
            AND e.posId=#{posId}
        </if>
        <if test="jobLevelId!=null and jobLevelId!=''">
            AND e.jobLevelId=#{jobLevelId}
        </if>
        <if test="departmentId!=null and departmentId!=''">
            AND e.departmentId=#{departmentId}
        </if>
        <if test="startBeginDate!=null and endBeginDate!=null">
            AND e.beginDate BETWEEN #{startBeginDate} AND #{endBeginDate}
        </if>
        <if test="start!=null and size!=null">
            order by e.id limit #{start},#{size}
        </if>
    </select>
    <select id="getCountByKeywords" resultType="Long">
        SELECT count(*) FROM employee e WHERE e.name LIKE concat('%',#{keywords},'%')
        <if test="engageForm!=null and engageForm!=''">
            AND e.engageForm=#{engageForm}
        </if>
        <if test="politicId!=null and politicId!=''">
            AND e.politicId=#{politicId}
        </if>
        <if test="nationId!=null and nationId!=''">
            AND e.nationId=#{nationId}
        </if>
        <if test="posId!=null and posId!=''">
            AND e.posId=#{posId}
        </if>
        <if test="jobLevelId!=null and jobLevelId!=''">
            AND e.jobLevelId=#{jobLevelId}
        </if>
        <if test="departmentId!=null and departmentId!=''">
            AND e.departmentId=#{departmentId}
        </if>
        <if test="startBeginDate!=null and endBeginDate!=null">
            AND e.beginDate BETWEEN #{startBeginDate} AND #{endBeginDate}
        </if>
    </select>
    <update id="updateEmp">
        update employee
        <set>
            <if test="emp.name != null">
                name = #{emp.name,jdbcType=VARCHAR},
            </if>
            <if test="emp.gender != null">
                gender = #{emp.gender,jdbcType=CHAR},
            </if>
            <if test="emp.birthday != null">
                birthday = #{emp.birthday,jdbcType=DATE},
            </if>
            <if test="emp.idCard != null">
                idCard = #{emp.idCard,jdbcType=CHAR},
            </if>
            <if test="emp.wedlock != null">
                wedlock = #{emp.wedlock,jdbcType=CHAR},
            </if>
            <if test="emp.nationId != null">
                nationId = #{emp.nationId,jdbcType=INTEGER},
            </if>
            <if test="emp.nativePlace != null">
                nativePlace = #{emp.nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="emp.politicId != null">
                politicId = #{emp.politicId,jdbcType=INTEGER},
            </if>
            <if test="emp.email != null">
                email = #{emp.email,jdbcType=VARCHAR},
            </if>
            <if test="emp.phone != null">
                phone = #{emp.phone,jdbcType=VARCHAR},
            </if>
            <if test="emp.address != null">
                address = #{emp.address,jdbcType=VARCHAR},
            </if>
            <if test="emp.departmentId != null">
                departmentId = #{emp.departmentId,jdbcType=INTEGER},
            </if>
            <if test="emp.jobLevelId != null">
                jobLevelId = #{emp.jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="emp.posId != null">
                posId = #{emp.posId,jdbcType=INTEGER},
            </if>
            <if test="emp.engageForm != null">
                engageForm = #{emp.engageForm,jdbcType=VARCHAR},
            </if>
            <if test="emp.tiptopDegree != null">
                tiptopDegree = #{emp.tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="emp.specialty != null">
                specialty = #{emp.specialty,jdbcType=VARCHAR},
            </if>
            <if test="emp.school != null">
                school = #{emp.school,jdbcType=VARCHAR},
            </if>
            <if test="emp.beginDate != null">
                beginDate = #{emp.beginDate,jdbcType=DATE},
            </if>
            <if test="emp.workState != null">
                workState = #{emp.workState,jdbcType=CHAR},
            </if>
            <if test="emp.contractTerm != null">
                contractTerm = #{emp.contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="emp.conversionTime != null">
                conversionTime = #{emp.conversionTime,jdbcType=DATE},
            </if>
            <if test="emp.notWorkDate != null">
                notWorkDate = #{emp.notWorkDate,jdbcType=DATE},
            </if>
            <if test="emp.beginContract != null">
                beginContract = #{emp.beginContract,jdbcType=DATE},
            </if>
            <if test="emp.endContract != null">
                endContract = #{emp.endContract,jdbcType=DATE},
            </if>
        </set>
        where id = #{emp.id,jdbcType=BIGINT}
    </update>
    <delete id="deleteEmpById">
        DELETE FROM employee WHERE id IN
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </delete>
    <insert id="addEmps">
        insert into employee (name, gender,
        birthday, idCard, wedlock, nationId,
        nativePlace, politicId, email,
        phone, address, departmentId,
        jobLevelId, posId, engageForm,
        tiptopDegree, specialty, school,
        beginDate,workID,
        contractTerm, conversionTime,
        beginContract, endContract, workAge
        )
        values
        <foreach collection="emps" item="emp" separator=",">
            (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
            #{emp.birthday,jdbcType=DATE}, #{emp.idCard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR},
            #{emp.nationId,jdbcType=BIGINT},
            #{emp.nativePlace,jdbcType=VARCHAR}, #{emp.politicId,jdbcType=BIGINT}, #{emp.email,jdbcType=VARCHAR},
            #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentId,jdbcType=BIGINT},
            #{emp.jobLevelId,jdbcType=BIGINT}, #{emp.posId,jdbcType=BIGINT}, #{emp.engageForm,jdbcType=VARCHAR},
            #{emp.tiptopDegree,jdbcType=VARCHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
            #{emp.beginDate,jdbcType=DATE},#{emp.workID,jdbcType=BIGINT},
            #{emp.contractTerm,jdbcType=BIGINT}, #{emp.conversionTime,jdbcType=DATE},
            #{emp.beginContract,jdbcType=DATE}, #{emp.endContract,jdbcType=DATE}, #{emp.workAge,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <select id="getEmployeeByPageShort" resultMap="BaseResultMap">
select e.*,d.`id` as did,d.`name` as dname,s.`id` as sid,s.`accumulationFundBase`,s.`accumulationFundPer`,s.`allSalary`,s.`basicSalary`,s.`bonus`,s.`createDate`,s.`lunchSalary`,s.`medicalBase`,s.`medicalPer`,s.`name` as sname,s.`pensionBase`,s.`pensionPer`,s.`trafficSalary` from employee e left join department d on e.`departmentId`=d.id left join empsalary es on es.`eid`=e.`id` left join salary s on s.`id`=es.`sid` ORDER BY e.id limit #{start},#{size}
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(id) from employee

    </select>
    <select id="getEmployeeByPageSize" resultMap="BaseResultMap">
        SELECT
        e.id,
        e.NAME,
        e.workID,
        e.gender,
        e.birthday,
        e.idCard,
        e.wedlock,
        e.nationId,
        e.politicId,
        e.departmentId,
        e.jobLevelId,
        e.posId,
        n.NAME AS nname,
        n.id AS nid,
        e.nativePlace,
        ps.NAME AS psname,
        ps.id AS psid,
        e.email,
        e.phone,
        e.address,
        d.id AS did,
        d.NAME AS dname,
        p.id AS pid,
        p.NAME AS pname,
        j.id AS jlid,
        j.NAME AS jlname,
        e.engageForm,
        e.beginDate,
        e.conversionTime,
        e.beginContract,
        e.endContract,
        e.contractTerm,
        e.tiptopDegree
        FROM
        employee e,
        nation n,
        department d,
        joblevel j,
        position p,
        politicsstatus ps
        WHERE
        e.politicId = ps.id
        AND e.nationId = n.id
        AND e.departmentId = d.id
        AND e.posId = p.id
        AND e.jobLevelId = j.id
        order by e.id limit #{page},#{size}
    </select>
    <select id="getEmployeeByEmpName" resultMap="BaseResultMap">

        SELECT
            e.id,
            e.NAME,
            e.workID,
            e.gender,
            e.birthday,
            e.idCard,
            e.wedlock,
            e.school,
            e.specialty,
        e.nationId,
        e.politicId,
        e.departmentId,
        e.jobLevelId,
        e.posId,
            n.NAME AS nname,
            n.id AS nid,
            e.nativePlace,
            ps.NAME AS psname,
            ps.id AS psid,
            e.email,
            e.phone,
            e.address,
            d.id AS did,
            d.NAME AS dname,
            p.id AS pid,
            p.NAME AS pname,
            j.id AS jlid,
            j.NAME AS jlname,
            e.engageForm,
            e.beginDate,
            e.conversionTime,
            e.beginContract,
            e.endContract,
            e.contractTerm,
            e.tiptopDegree
        FROM
            employee e,
            nation n,
            department d,
            joblevel j,
            position p,
            politicsstatus ps
        WHERE
            e.politicId = ps.id
          AND e.nationId = n.id
          AND e.departmentId = d.id
          AND e.posId = p.id
          AND e.jobLevelId = j.id
        <if test="name != null and name != ''">
            and e.name like concat('%',#{name} ,'%')
        </if>
        order by e.id
        <if test="page!=null and size!=null">
            limit #{page},#{size}
        </if>


    </select>
    <select id="getTotalEmpName" resultType="java.lang.Long">
        select count(id) from employee
        <if test="name != null and name != ''">
            where name like concat('%',#{name} ,'%')
        </if>
    </select>
    <select id="selectEmpDept" resultType="java.lang.Integer">
        select count(id) from employee where departmentId=#{id}
    </select>
    <select id="getEmpByConditionSearch" resultMap="BaseResultMap">
        SELECT
        e.id,
        e.NAME,
        e.workID,
        e.gender,
        e.birthday,
        e.idCard,
        e.wedlock,
        e.school,
        e.specialty,
        e.nationId,
        e.politicId,
        e.departmentId,
        e.jobLevelId,
        e.posId,
        n.NAME AS nname,
        n.id AS nid,
        e.nativePlace,
        ps.NAME AS psname,
        ps.id AS psid,
        e.email,
        e.phone,
        e.address,
        d.id AS did,
        d.NAME AS dname,
        p.id AS pid,
        p.NAME AS pname,
        j.id AS jlid,
        j.NAME AS jlname,
        e.engageForm,
        e.beginDate,
        e.conversionTime,
        e.beginContract,
        e.endContract,
        e.contractTerm,
        e.tiptopDegree
        FROM
        employee e,
        nation n,
        department d,
        joblevel j,
        position p,
        politicsstatus ps
        WHERE
        e.politicId = ps.id
        AND e.nationId = n.id
        AND e.departmentId = d.id
        AND e.posId = p.id
        AND e.jobLevelId = j.id
        <if test="emp.departmentId != null">
            and e.departmentId = #{emp.departmentId}
        </if>
        <if test="emp.nationId != null">
            and e.nationId = #{emp.nationId}
        </if>
        <if test="emp.posId != null">
            and e.posId=#{emp.posId}
        </if>
        <if test="emp.jobLevelId != null">
            and e.jobLevelId = #{emp.jobLevelId}
        </if>
        <if test="emp.engageForm != null">
            and e.engageForm = #{emp.engageForm}
        </if>
        <if test="emp.politicId != null">
            and e.politicId = #{emp.politicId}
        </if>
        <if test="date != null">
            and e.beginDate BETWEEN #{date[0]} and #{date[1]}
        </if>

        order by e.id
        <if test="page!=null and size!=null">
            limit #{page},#{size}
        </if>



    </select>
    <select id="getTotal2" resultType="java.lang.Long">
        select count(*) from employee
        <where>
            <if test="emp.departmentId != null">
                and departmentId = #{emp.departmentId}
            </if>
            <if test="emp.nationId != null">
                and nationId = #{emp.nationId}
            </if>
            <if test="emp.posId != null">
                and posId=#{emp.posId}
            </if>
            <if test="emp.jobLevelId != null">
                and jobLevelId = #{emp.jobLevelId}
            </if>
            <if test="emp.engageForm != null">
                and engageForm = #{emp.engageForm}
            </if>
            <if test="emp.politicId != null">
                and politicId = #{emp.politicId}
            </if>
            <if test="beginDataScope != null">
                and beginDate BETWEEN #{beginDataScope[0]} and #{beginDataScope[1]}
            </if>

        </where>
    </select>
    <select id="getEmployeeById" resultMap="BaseResultMap">
        SELECT
        e.id,
        e.NAME,
        e.workID,
        e.gender,
        e.birthday,
        e.idCard,
        e.wedlock,
        e.school,
        e.specialty,
        e.nationId,
        e.politicId,
        e.departmentId,
        e.jobLevelId,
        e.posId,
        n.NAME AS nname,
        n.id AS nid,
        e.nativePlace,
        ps.NAME AS psname,
        ps.id AS psid,
        e.email,
        e.phone,
        e.address,
        d.id AS did,
        d.NAME AS dname,
        p.id AS pid,
        p.NAME AS pname,
        j.id AS jlid,
        j.NAME AS jlname,
        e.engageForm,
        e.beginDate,
        e.conversionTime,
        e.beginContract,
        e.endContract,
        e.contractTerm,
        e.tiptopDegree
        FROM
        employee e,
        nation n,
        department d,
        joblevel j,
        position p,
        politicsstatus ps
        WHERE
        e.politicId = ps.id
        AND e.nationId = n.id
        AND e.departmentId = d.id
        AND e.posId = p.id
        AND e.jobLevelId = j.id
        AND e.id = #{id}

    </select>
</mapper>